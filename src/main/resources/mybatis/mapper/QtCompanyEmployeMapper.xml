<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.giousa.daily.mapper.QtCompanyEmployeMapper" >
  <resultMap id="BaseResultMap" type="com.giousa.daily.model.QtCompanyEmploye" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="entry_dt" property="entryDt" jdbcType="DATE" />
    <result column="quit_dt" property="quitDt" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, user_id, level_id, entry_dt, quit_dt, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from qt_company_employe
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from qt_company_employe
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.giousa.daily.model.QtCompanyEmploye" >
    insert into qt_company_employe (id, company_id, user_id,
      level_id, entry_dt, quit_dt,
      status, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
      #{levelId,jdbcType=INTEGER}, #{entryDt,jdbcType=DATE}, #{quitDt,jdbcType=DATE},
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.giousa.daily.model.QtCompanyEmploye" >
    insert into qt_company_employe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="entryDt != null" >
        entry_dt,
      </if>
      <if test="quitDt != null" >
        quit_dt,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="entryDt != null" >
        #{entryDt,jdbcType=DATE},
      </if>
      <if test="quitDt != null" >
        #{quitDt,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.giousa.daily.model.QtCompanyEmploye" >
    update qt_company_employe
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="entryDt != null" >
        entry_dt = #{entryDt,jdbcType=DATE},
      </if>
      <if test="quitDt != null" >
        quit_dt = #{quitDt,jdbcType=DATE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.giousa.daily.model.QtCompanyEmploye" >
    update qt_company_employe
    set company_id = #{companyId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=INTEGER},
      entry_dt = #{entryDt,jdbcType=DATE},
      quit_dt = #{quitDt,jdbcType=DATE},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>



  <resultMap id="QtCompanyEmployeVOMap" type="com.giousa.daily.bean.comp.QtCompanyEmployeVO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="entry_dt" property="entryDt" jdbcType="VARCHAR" />
    <result column="quit_dt" property="quitDt" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <association property="companyInfo" javaType="com.giousa.daily.model.QtCompany" columnPrefix="c_">
      <id column="id" property="id" jdbcType="VARCHAR" />
      <result column="full_name" property="fullName" jdbcType="VARCHAR" />
      <result column="simple_name" property="simpleName" jdbcType="VARCHAR" />
      <result column="city" property="city" jdbcType="VARCHAR" />
      <result column="address" property="address" jdbcType="VARCHAR" />
    </association>
    <association property="userInfo" javaType="com.giousa.daily.model.QtUser" columnPrefix="u_">
      <id column="id" property="id" jdbcType="VARCHAR" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="nickname" property="nickname" jdbcType="VARCHAR" />
      <result column="phone" property="phone" jdbcType="VARCHAR" />
      <result column="address" property="address" jdbcType="VARCHAR" />
      <result column="head_img" property="headImg" jdbcType="VARCHAR" />
      <result column="gender" property="gender" jdbcType="INTEGER" />
      <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="sign" property="sign" jdbcType="VARCHAR" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
      <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </association>
    <association property="sortInfo" javaType="com.giousa.daily.model.QtSort" columnPrefix="s_">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="type" property="type" jdbcType="VARCHAR" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="weight" property="weight" jdbcType="INTEGER" />
    </association>
  </resultMap>

  <select id="findQtCompanyEmployeInfo" resultMap="QtCompanyEmployeVOMap">
    select
    e.*,
    c.id c_id,
    c.full_name c_full_name,
    c.simple_name c_simple_name,
    c.city c_city,
    c.address c_address,
    u.id u_id,
    u.name u_name,
    u.nickname u_nickname,
    u.phone u_phone,
    u.address u_address,
    u.head_img u_head_img,
    u.gender u_gender,
    u.email u_email,
    u.sign u_sign,
    u.create_time u_create_time,
    u.update_time u_update_time,
    s.id s_id,
    s.type s_type,
    s.name s_name,
    s.weight s_weight
    from
    qt_company_employe e
    left join qt_company c on e.company_id = c.id
    left join qt_user u on e.user_id = u.id
    left join qt_sort s on e.level_id = s.id
    where e.id = #{id}
  </select>


  <select id="findQtCompanyEmployeList" resultMap="QtCompanyEmployeVOMap">
    select
    e.*,
    c.id c_id,
    c.full_name c_full_name,
    c.simple_name c_simple_name,
    c.city c_city,
    c.address c_address,
    u.id u_id,
    u.name u_name,
    u.nickname u_nickname,
    u.phone u_phone,
    u.address u_address,
    u.head_img u_head_img,
    u.gender u_gender,
    u.email u_email,
    u.sign u_sign,
    u.create_time u_create_time,
    u.update_time u_update_time,
    s.id s_id,
    s.type s_type,
    s.name s_name,
    s.weight s_weight
    from
    qt_company_employe e
    left join qt_company c on e.company_id = c.id
    left join qt_user u on e.user_id = u.id
    left join qt_sort s on e.level_id = s.id
    where
    true
    <if test="companyId != null and companyId != ''" >
      and e.company_id = #{companyId}
    </if>
    <if test="levelId != null" >
      and e.level_id = #{levelId}
    </if>
    order by e.create_time desc
    limit #{start},#{size}
  </select>


  <select id="findQtCompanyEmployeListTotalCount" resultType="int">
    select
    count(*)
    from
    qt_company_employe e
    where
    true
    <if test="companyId != null and companyId != ''" >
      and e.company_id = #{companyId}
    </if>
    <if test="levelId != null" >
      and e.level_id = #{levelId}
    </if>
  </select>
</mapper>